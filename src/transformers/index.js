const inline = require('./inline')
const minify = require('./minify')
// const markdown = require('./markdown')
const prettify = require('./prettify')
// const ensureSixHEX = require('./six-hex')
// const addURLParams = require('./url-params')
// const transformContents = require('./transform')
const preventWidows = require('./prevent-widows')
// const replaceStrings = require('./replace-strings')
// const safeClassNames = require('./safe-class-names')
// const applyBaseImageUrl = require('./base-image-url')
const removeUnusedCSS = require('./remove-unused-css')
// const removeAttributes = require('./remove-attributes')
const attributeToStyle = require('./attribute-to-style')
// const removeInlineSizes = require('./remove-inline-sizes')
// const applyExtraAttributes = require('./extra-attributes')
// const removeInlineBgColor = require('./remove-inline-bgcolor')

exports.process = async (html, config) => {
  // html = await safeClassNames(html, config)
  // html = await transformContents(html, config)
  // html = await markdown(html, config)
  // html = await preventWidows(html, config)
  html = await attributeToStyle(html, config)
  html = await inline(html, config)
  html = await removeUnusedCSS(html, config)
  // html = await removeInlineSizes(html, config)
  // html = await removeInlineBgColor(html, config)
  // html = await removeAttributes(html, config)
  // html = await applyExtraAttributes(html, config)
  // html = await applyBaseImageUrl(html, config)
  // html = await addURLParams(html, config)
  // html = await ensureSixHEX(html, config)
  html = await prettify(html, config)
  html = await minify(html, config)
  // html = await replaceStrings(html, config)

  return html
}

exports.inlineCSS = (html, config) => inline(html, config, true)
exports.minify = (html, config) => minify(html, config, true)
exports.markdown = (html, config) => markdown(html, config, true)
exports.prettify = (html, config) => prettify(html, config, true)
exports.ensureSixHEX = html => ensureSixHEX(html)
exports.addURLParams = (html, config) => addURLParams(html, config, true)
exports.transformContents = (html, config) => transformContents(html, config, true)
exports.preventWidows = (html, config) => preventWidows(html, config, true)
exports.replaceStrings = (html, config) => replaceStrings(html, config, true)
exports.safeClassNames = (html, config) => safeClassNames(html, config, true)
exports.applyBaseImageUrl = (html, config) => applyBaseImageUrl(html, config, true)
exports.removeUnusedCSS = (html, config) => removeUnusedCSS(html, config, true)
exports.removeAttributes = (html, config) => removeAttributes(html, config, true)
exports.removeInlineSizes = (html, config) => removeInlineSizes(html, config, true)
exports.applyExtraAttributes = (html, config) => applyExtraAttributes(html, config, true)
exports.removeInlineBgColor = (html, config) => removeInlineBgColor(html, config, true)
exports.attributeToStyle = (html, config) => attributeToStyle(html, config, true)
